apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-db
  namespace: unifi
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: mongo-db
  serviceName: mongo
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: mongo-db
      name: mongo-db
    spec:
      containers:
      - image: docker.io/mongo:8.0@sha256:4a995c5ce82d50b8552ae00f884a4aaf64994490b6cd4cf1bca066ac3a1c5509
        imagePullPolicy: IfNotPresent
        name: mongo-db
        ports:
        - containerPort: 27017
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data/db
          name: mongodb-data
        - mountPath: /docker-entrypoint-initdb.d
          name: mongodb-init
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: mongodb-init
        secret:
          defaultMode: 420
          items:
          - key: init-mongo.js
            path: init-mongo.js
          secretName: mongo-init
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: mongodb-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
      storageClassName: longhorn
      volumeMode: Filesystem
    status:
      phase: Pending
